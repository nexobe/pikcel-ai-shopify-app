#
# DigitalOcean App Platform - Complete Deployment Template
# PikcelAI Shopify App
#
# This is a comprehensive template showing all available configuration options
# for deploying the Shopify app to DigitalOcean App Platform.
#
# Usage:
#   1. Copy this file to app.yaml
#   2. Replace placeholders (YOUR_*, ${...})
#   3. Remove unused sections
#   4. Deploy via: doctl apps create --spec .do/app.yaml
#
# Documentation: https://docs.digitalocean.com/products/app-platform/reference/app-spec/
#

###########################################
# BASIC APP CONFIGURATION
###########################################

name: pikcel-ai-shopify-app
region: nyc  # Options: nyc (New York), sfo (San Francisco), ams (Amsterdam), sgp (Singapore), blr (Bangalore), fra (Frankfurt), lon (London), tor (Toronto)

###########################################
# INGRESS (ROUTING) CONFIGURATION
###########################################

ingress:
  rules:
    - component:
        name: web
      match:
        path:
          prefix: /

###########################################
# WEB SERVICE CONFIGURATION
###########################################

services:
  - name: web

    #---------------------------------------
    # SOURCE CODE CONFIGURATION
    #---------------------------------------

    # Option 1: GitHub repository
    github:
      repo: YOUR_GITHUB_USERNAME/pikcel-ai-shopify-app
      branch: main
      deploy_on_push: true  # Auto-deploy on git push

    # Option 2: GitLab repository
    # gitlab:
    #   repo: YOUR_GITLAB_USERNAME/pikcel-ai-shopify-app
    #   branch: main
    #   deploy_on_push: true

    # Option 3: Container image
    # image:
    #   registry_type: DOCKER_HUB
    #   registry: YOUR_DOCKER_USERNAME
    #   repository: pikcel-ai-shopify-app
    #   tag: latest

    #---------------------------------------
    # BUILD CONFIGURATION
    #---------------------------------------

    # Build from source using buildpack
    environment_slug: node-js  # DigitalOcean uses Node.js 22.x by default

    build_command: npm run build

    # Alternative: Build using Dockerfile
    # dockerfile_path: Dockerfile

    # Source directory (if app is in subdirectory)
    # source_dir: /

    #---------------------------------------
    # RUNTIME CONFIGURATION
    #---------------------------------------

    run_command: npm start

    # HTTP port (DigitalOcean requires 8080)
    http_port: 8080

    # Instance configuration
    instance_count: 1  # Number of instances (for horizontal scaling)
    instance_size_slug: basic-xxs  # Options: basic-xxs, basic-xs, basic-s, basic-m, professional-xs, professional-s, professional-m, professional-l, professional-xl

    # Auto-scaling (requires Professional tier)
    # autoscaling:
    #   min_instance_count: 1
    #   max_instance_count: 5
    #   metrics:
    #     cpu:
    #       percent: 80

    #---------------------------------------
    # ENVIRONMENT VARIABLES
    #---------------------------------------

    envs:
      # Node.js environment
      - key: NODE_ENV
        value: production
        scope: RUN_TIME
        type: GENERAL

      # Server port
      - key: PORT
        value: "8080"
        scope: RUN_TIME
        type: GENERAL

      # Application URL (auto-generated by DigitalOcean)
      - key: BACKEND_URL
        value: ${APP_URL}
        scope: RUN_TIME
        type: GENERAL

      - key: SHOPIFY_APP_URL
        value: ${APP_URL}
        scope: RUN_TIME
        type: GENERAL

      # Shopify API credentials (SECRETS - set via CLI or control panel)
      - key: SHOPIFY_API_KEY
        scope: RUN_TIME
        type: SECRET

      - key: SHOPIFY_API_SECRET
        scope: RUN_TIME
        type: SECRET

      - key: SHOPIFY_APP_SESSION_SECRET
        scope: RUN_TIME
        type: SECRET
        # Generate with: openssl rand -base64 32

      # Shopify configuration
      - key: SHOPIFY_SCOPES
        value: "read_products,write_products,read_files,write_files"
        scope: RUN_TIME
        type: GENERAL

      # Database connection (bound from database component)
      - key: DATABASE_URL
        value: ${db.DATABASE_URL}
        scope: RUN_AND_BUILD_TIME
        type: GENERAL

      # Individual database credentials (alternative to DATABASE_URL)
      # - key: DB_HOST
      #   value: ${db.HOSTNAME}
      # - key: DB_PORT
      #   value: ${db.PORT}
      # - key: DB_DATABASE
      #   value: ${db.DATABASE}
      # - key: DB_USERNAME
      #   value: ${db.USERNAME}
      # - key: DB_PASSWORD
      #   value: ${db.PASSWORD}

      # Optional: PikcelAI API integration
      # - key: PIKCEL_API_KEY
      #   scope: RUN_TIME
      #   type: SECRET
      # - key: PIKCEL_API_URL
      #   value: "https://api.pikcel.ai"
      #   scope: RUN_TIME
      #   type: GENERAL

    #---------------------------------------
    # HEALTH CHECK CONFIGURATION
    #---------------------------------------

    health_check:
      http_path: /healthz  # Health check endpoint
      initial_delay_seconds: 60  # Wait time before first check
      period_seconds: 10  # Check interval
      timeout_seconds: 3  # Request timeout
      success_threshold: 1  # Successful checks to mark healthy
      failure_threshold: 3  # Failed checks to mark unhealthy
      # port: 8080  # Override default port

    #---------------------------------------
    # ROUTES CONFIGURATION
    #---------------------------------------

    routes:
      - path: /
        preserve_path_prefix: true

    #---------------------------------------
    # CORS CONFIGURATION
    #---------------------------------------

    # cors:
    #   allow_origins:
    #     - prefix: https://
    #       regex: .*\.myshopify\.com$
    #   allow_methods:
    #     - GET
    #     - POST
    #     - PUT
    #     - DELETE
    #     - OPTIONS
    #   allow_headers:
    #     - Content-Type
    #     - Authorization
    #   expose_headers:
    #     - X-Request-ID
    #   max_age: 86400
    #   allow_credentials: true

###########################################
# DATABASE CONFIGURATION
###########################################

databases:
  - name: db
    engine: PG  # PostgreSQL
    version: "16"  # Options: "12", "13", "14", "15", "16"
    production: true  # Enable high availability
    cluster_name: pikcel-shopify-db
    db_name: pikcel_shopify
    db_user: pikcel_admin

    # Database instance size
    # Development: db-s-dev-database (1 vCPU, 1GB RAM, 10GB SSD) - $15/month
    # Basic: db-s-1vcpu-1gb (1 vCPU, 1GB RAM, 10GB SSD) - $15/month
    # Basic: db-s-1vcpu-2gb (1 vCPU, 2GB RAM, 25GB SSD) - $30/month
    # Basic: db-s-2vcpu-4gb (2 vCPU, 4GB RAM, 38GB SSD) - $60/month
    # Professional: db-s-4vcpu-8gb (4 vCPU, 8GB RAM, 115GB SSD) - $120/month
    size: db-s-dev-database

    # Connection pooling (optional)
    # connection_pool:
    #   name: pool
    #   mode: transaction  # Options: session, transaction, statement
    #   size: 20  # Pool size

    # Automatic backups (requires paid plan)
    # backup:
    #   enabled: true
    #   retention_days: 7  # Keep backups for 7 days

###########################################
# JOBS (PRE/POST DEPLOY)
###########################################

jobs:
  # Pre-deploy job: Database migrations
  - name: db-migrate
    kind: PRE_DEPLOY  # Runs before deployment

    github:
      repo: YOUR_GITHUB_USERNAME/pikcel-ai-shopify-app
      branch: main

    environment_slug: node-js

    # Run Prisma migrations
    run_command: npm run setup

    envs:
      - key: DATABASE_URL
        value: ${db.DATABASE_URL}
        scope: RUN_TIME
        type: GENERAL

      - key: NODE_ENV
        value: production
        scope: RUN_TIME
        type: GENERAL

  # Post-deploy job example: Data seeding
  # - name: seed-data
  #   kind: POST_DEPLOY
  #
  #   github:
  #     repo: YOUR_GITHUB_USERNAME/pikcel-ai-shopify-app
  #     branch: main
  #
  #   environment_slug: node-js
  #
  #   run_command: npm run seed
  #
  #   envs:
  #     - key: DATABASE_URL
  #       value: ${db.DATABASE_URL}

###########################################
# STATIC SITE (if serving frontend separately)
###########################################

# static_sites:
#   - name: frontend
#     github:
#       repo: YOUR_GITHUB_USERNAME/pikcel-ai-shopify-app
#       branch: main
#       deploy_on_push: true
#
#     source_dir: client
#     output_dir: dist
#
#     build_command: npm run build
#
#     environment_slug: node-js
#
#     routes:
#       - path: /
#
#     # SPA routing support
#     error_document: index.html
#     index_document: index.html
#
#     envs:
#       - key: VITE_API_URL
#         value: ${web.PUBLIC_URL}

###########################################
# WORKERS (Background jobs)
###########################################

# workers:
#   - name: queue-worker
#     github:
#       repo: YOUR_GITHUB_USERNAME/pikcel-ai-shopify-app
#       branch: main
#
#     environment_slug: node-js
#
#     run_command: npm run worker
#
#     instance_count: 1
#     instance_size_slug: basic-xxs
#
#     envs:
#       - key: DATABASE_URL
#         value: ${db.DATABASE_URL}
#       - key: NODE_ENV
#         value: production

###########################################
# ALERTS CONFIGURATION
###########################################

# alerts:
#   - rule: DEPLOYMENT_FAILED
#   - rule: DEPLOYMENT_LIVE
#   - rule: DOMAIN_FAILED
#   - rule: DOMAIN_LIVE
#   - rule: SERVICE_UNHEALTHY
#   - rule: DATABASE_UNHEALTHY

###########################################
# DOMAINS (Custom domains)
###########################################

# domains:
#   - domain: app.pikcel.ai
#     type: PRIMARY
#     zone: pikcel.ai
#   - domain: www.app.pikcel.ai
#     type: ALIAS

###########################################
# FEATURES
###########################################

# features:
#   - buildpack-stack=ubuntu-22  # Ubuntu 22.04 LTS build environment

###########################################
# MAINTENANCE MODE
###########################################

# maintenance:
#   enabled: true
#   archive_url: https://your-bucket.s3.amazonaws.com/maintenance.html
